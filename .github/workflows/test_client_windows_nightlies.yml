name: Simvue Nightlies (Windows)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  object_retrieval:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install torch --index-url https://download.pytorch.org/whl/cpu
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m object_retrieval -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  object_removal:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install torch --index-url https://download.pytorch.org/whl/cpu
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'object_removal and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  dispatch_tests:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'dispatch and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  run_tests_online:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install torch --index-url https://download.pytorch.org/whl/cpu
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m run -m 'online and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  run_tests_offline:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install torch --index-url https://download.pytorch.org/whl/cpu
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m run -m 'offline and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  config_tests:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'config and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  executor_tests:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'executor and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  api_tests:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'api and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
  local_tests:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry self add poetry-plugin-export
        poetry export -f requirements.txt --with dev -o requirements.txt --all-extras
        python -m pip install -r requirements.txt
        python -m pip install .
    - name: Test with pytest
      env:
        SIMVUE_URL: ${{ secrets.SIMVUE_URL }}
        SIMVUE_TOKEN: ${{ secrets.SIMVUE_TOKEN }}
      run: >-
        python -m pytest -x
        -m 'local and not unix' -c /dev/null -p no:warnings
        -n 0 -v -o cache_dir=${GITHUB_WORKSPACE}/.pytest-cache
      shell: pwsh
